# this one is important
include (CMakeForceCompiler)
set(CMAKE_SYSTEM_NAME Generic)
CMAKE_FORCE_C_COMPILER   (arm-none-eabi-gcc GNU)
CMAKE_FORCE_CXX_COMPILER (arm-none-eabi-g++ GNU)
SET(XDC_INSTALL_PATH C:/ti/xdctools_3_25_06_96/packages)
SET(BIOS_INSTALL_PATH C:/ti/bios_6_45_00_03_eng/packages)
SET(LLVM_PATH D:/OpenCL/LLVM/llvm33-src1/llvm33-src/install/include)
SET(IPC_PATH C:/ti/ipc_3_22_01_08/packages)
SET(BOOST_INSTALL_PATH D:/OpenCL/LLVM/boost_1_58_0)
SET(LOKI_INCLUDE_PATH D:/OpenCL/loki-0.1.5/include)
SET(SQLITE_PATH D:/OpenCL/LLVM/sqlite)
SET(BUILD_OS SYS_BIOS)
SET(GCC_COVERAGE_C_FLAGS "-MMD -MP -mcpu=cortex-a15 -mtune=cortex-a15 -mfloat-abi=hard -Dxdc_target_types__=${BIOS_INSTALL_PATH}/gnu/targets/arm/std.h -Dxdc_target_name__=A15F")
SET(GCC_COVERAGE_LINK_FLAGS "-nostartfiles -static -L${BIOS_INSTALL_PATH}/gnu/targets/arm/libs/install-native/arm-none-eabi/lib/fpu -lrdimon -lc -lm -lnosys")
SET(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
#this one not so much
SET(CMAKE_SYSTEM_VERSION 1)
SET(BUILD_TARGET ARM_AM57)

SET(CMAKE_INSTALL_PREFIX D:/OpenCL/osal_dev/bin)
SET(CMAKE_SYSTEM_PROCESSOR ARM)
SET(CROSS_COMPILE ON)
SET(CMAKE_CROSSCOMPILING=True)
SET(TOOL_ROOT C:/ti/ccsv6/tools/compiler/gcc-arm-none-eabi-4_8-2014q3/bin)
# specify the cross compiler
SET(CMAKE_C_COMPILER arm-none-eabi-gcc)
SET(CMAKE_CXX_COMPILER arm-none-eabi-gcc)
SET(CMAKE_C_FLAGS "${GCC_COVERAGE_C_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}" )
SET(CMAKE_CXX_FLAGS  "${GCC_COVERAGE_C_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}")
SET(CMAKE_EXE_LINK_FLAGS "${GCC_COVERAGE_LINK_FLAGS}")
SET(C_DEFINES "")
SET(CXX_DEFINES "")
SET(DEFAULT_DEV_INSTALL_DIR D:/OpenCL/osal_dev/host/build)
# For external builds, paths to dependent libraries/packages are assumed to
# be specified by environment variables.
# For internal development builds setup a default path for dependent libs/pkgs
   SET(TOOL_ROOT C:/ti/ccsv6/tools/compiler/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi)

SET(CMAKE_FIND_ROOT_PATH  ${TOOL_ROOT} D:/OpenCL/osal_dev/host)

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH true)

set(HOST_USR_INCLUDE_PATH D:/OpenCL/osal_dev/host/BIOS ${LLVM_PATH} ${IPC_PATH} ../include )
