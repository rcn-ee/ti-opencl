# this one is important
include (CMakeForceCompiler)
set(CMAKE_SYSTEM_NAME Generic)
CMAKE_FORCE_C_COMPILER  ($ENV{GCC_ARM_NONE_TOOLCHAIN}/bin/arm-none-eabi-gcc GNU)
CMAKE_FORCE_CXX_COMPILER($ENV{GCC_ARM_NONE_TOOLCHAIN}/bin/arm-none-eabi-g++ GNU)

# Linux build paths

IF (NOT DEFINED XDC_INSTALL_PATH)
MESSAGE(FATAL_ERROR "XDC_INSTALL_PATH not defined")
ENDIF()

IF (NOT DEFINED BIOS_INSTALL_PATH)
SET(BIOS_INSTALL_PATH       ${RTOS_INSTALL_DIR}/ti-sysbios-tree/packages)
MESSAGE(STATUS "BIOS_INSTALL_PATH: ${BIOS_INSTALL_PATH}")
ENDIF()

IF (NOT DEFINED IPC_INSTALL_PATH)
SET(IPC_INSTALL_PATH        ${RTOS_INSTALL_DIR}/ti-ipc-tree/packages)
ENDIF()

SET(LLVM_PATH               ${ARM_LLVM_DIR}/include)

IF (NOT DEFINED LOKI_INCLUDE_PATH)
SET(LOKI_INCLUDE_PATH       /usr/include/loki)
ENDIF()

# Windows build pathes
# SET(XDC_INSTALL_PATH C:/ti/xdctools_3_25_06_96/packages)
# SET(BIOS_INSTALL_PATH C:/ti/bios_6_45_00_03_eng/packages)
# SET(IPC_INSTALL_PATH C:/ti/ipc_3_22_01_08/packages)
# SET(LLVM_PATH D:/OpenCL/LLVM/ti-llvm/install/include)
# SET(LOKI_INCLUDE_PATH D:/OpenCL/loki-0.1.5/include)
# SET(TOOL_ROOT C:/ti/ccsv6/tools/compiler/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi)
# SET(CMAKE_INSTALL_PREFIX D:/OpenCL/osal_dev/bin)

SET(GCC_COVERAGE_C_FLAGS "-MMD -MP -mcpu=cortex-a15 -mtune=cortex-a15 -mfloat-abi=hard -Dxdc_target_types__=${BIOS_INSTALL_PATH}/gnu/targets/arm/std.h -Dxdc_target_name__=A15F -D_TI_RTOS -D_SYS_BIOS -D_POSIX_TIMERS -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -I$ENV{GCC_ARM_NONE_TOOLCHAIN}/arm-none-eabi/include -I$ENV{GCC_ARM_NONE_TOOLCHAIN}/arm-none-eabi/include/newlib-nano ")
SET(GCC_COVERAGE_LINK_FLAGS "-nostartfiles -static -L${BIOS_INSTALL_PATH}/gnu/targets/arm/libs/install-native/arm-none-eabi/lib/hard  --specs=nano.specs -lrdimon -lc -lm -lnosys")
SET(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
#this one not so much
SET(CMAKE_SYSTEM_VERSION 1)

SET(CMAKE_SYSTEM_PROCESSOR ARM)
SET(CROSS_COMPILE          ON)
SET(CMAKE_CROSSCOMPILING   TRUE)
# specify the cross compiler
SET(CMAKE_C_FLAGS        "${GCC_COVERAGE_C_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}" CACHE STRING "toolchain_cflags" FORCE)
SET(CMAKE_CXX_FLAGS      "${GCC_COVERAGE_C_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}" CACHE STRING "toolchain_cxxflags" FORCE)
SET(CMAKE_EXE_LINK_FLAGS "${GCC_COVERAGE_LINK_FLAGS}")
SET(C_DEFINES "")
SET(CXX_DEFINES "")

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH true)

set(HOST_USR_INCLUDE_PATH ${BIOS_INSTALL_PATH} ${IPC_INSTALL_PATH} ${XDC_INSTALL_PATH} ${LLVM_PATH} ${LOKI_INCLUDE_PATH} ../include )
